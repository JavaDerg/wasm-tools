[package]
name = "wast"
version = "201.0.0"
authors = ["Alex Crichton <alex@alexcrichton.com>"]
edition.workspace = true
license = "Apache-2.0 WITH LLVM-exception"
readme = "README.md"
repository = "https://github.com/bytecodealliance/wasm-tools/tree/main/crates/wast"
homepage = "https://github.com/bytecodealliance/wasm-tools/tree/main/crates/wast"
documentation = "https://docs.rs/wast"
description = """
Customizable Rust parsers for the WebAssembly Text formats WAT and WAST
"""

[lints]
workspace = true

[dependencies]
vint64 = { version = "1.0.1", default-features = false }
unicode-width = { version = "0.1.9", features = ["no_std"] }
memchr = { version = "2.4.1", default-features = false }
wasm-encoder = { workspace = true }
bumpalo = { version = "3.14.0", default-features = false }
hashbrown = { version = "0.14.3", default-features = false, features = ["ahash", "alloc", "core"] }

[dev-dependencies]
anyhow = { workspace = true }
libtest-mimic = { workspace = true }
wasmparser = { path = "../wasmparser" }
wat = { path = "../wat" }

[features]
default = ['wasm-module']

# Includes default parsing support for `*.wat` and `*.wast` files (wasm
# modules). This isn't always needed though if you're parsing just an
# s-expression based format. If you'd like to slim down this dependency to just
# the lexer, parser framework, and token support, this feature can be disabled.
#
# This feature is turned on by default.
wasm-module = []
std = []

[[test]]
name = "parse-fail"
harness = false
